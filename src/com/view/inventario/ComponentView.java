/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.view.inventario;

import com.conexion.oracle.ConexionOracle;
import com.controler.inventario.ControladorGeneral;
import com.model.inventario.CategoriaModel;
import com.model.inventario.DetalleFacturaModel;
import com.model.inventario.DetalleTemporal;
import com.model.inventario.FacturaModel;
import com.model.inventario.ProductoModel;
import java.awt.Color;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ComponentView extends javax.swing.JFrame {

    /*
     * Creates new form CategoriaView
     */
    public ComponentView() {
    }

    public ComponentView(String tipo,int user, ConexionOracle conn) {
        initComponents();
        init(tipo,user, conn);
    }

    private void init(String tipo, int user ,ConexionOracle conn) {
        initControlador(conn);
        initCargarTablas();
        initArrays();
        initUser(tipo,user);
        initSize();
    }

    public void initSize() {
        heigth = this.fieldcantidad.getHeight();
        width = this.fielddescripcionp.getHeight();
    }

    public void initArrays() {
        f = new ArrayList<>();
        array = new ArrayList<>();
    }

    public void initUser(String tipo,int user) {
        this.setUserType(tipo);
        this.setCajero(user);
        funciones(this.getUserType());
    }

    public void initControlador(ConexionOracle conn) {
        controlador = new ControladorGeneral(conn);
    }

    public void initCargarTablas() {
        this.mostrarTodosRegistros(controlador.getCategoria().getAll());
        this.mostrarTodosRegistrosProductos(controlador.getProducto().getAll());
        this.mostrarTodosRegistrosFacturas(controlador.getDetalle_factura().getAll());
    }

    /*----CAMBIAR --*/
    public void funciones(String tipo) {
        switch (this.getUserType()) {
            case "1":
                funcionCajero(tipo);
                cajerotxt.setText(String.valueOf(this.getCajero()));
                break;
            case "3":
                funcionGerente();
                break;
            case "4":
                funcionDBA();
                break;
            default:
                break;
        }
    }

    /*----------------*/
    public void funcionGerente() {
        agregarcategoria.setVisible(false);
        agregarproducto.setVisible(false);
        eliminarcategoria.setVisible(false);
        eliminarproducto.setVisible(false);
        jTabbedPane1.setEnabledAt(2, false);
        cajerotxt.setText("---");
    }

    public void funcionDBA() {
        jTabbedPane1.setEnabledAt(2, false);
        cajerotxt.setText("---");
    }

    public void funcionCajero(String tipo) {
        jTabbedPane1.setEnabledAt(0, false);
        jTabbedPane1.setEnabledAt(1, false);
        cajerotxt.setText(tipo);
        jTabbedPane1.setSelectedIndex(2);
    }

    public String getUserType() {
        return userType;
    }

    public void setUserType(String userType) {
        this.userType = userType;
    }

    public int getCajero() {
        return cajero;
    }

    public void setCajero(int cajero) {
        this.cajero = cajero;
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        ilabel53 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        infotxtp = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        fieldnumproducto = new javax.swing.JTextField();
        fieldnumcategoriap = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        buscartxtproducto = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        fieldean = new javax.swing.JTextField();
        fieldprecio = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        fieldplu = new javax.swing.JTextField();
        fielddescripcionp = new javax.swing.JTextField();
        fieldcantidad = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        fieldpeso = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        agregarproducto = new javax.swing.JButton();
        eliminarproducto = new javax.swing.JButton();
        editarproducto = new javax.swing.JButton();
        guardarproducto = new javax.swing.JButton();
        cantipo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCategoria = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        infotxt = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fieldnumcategoria = new javax.swing.JTextField();
        fielddescripcion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        eliminarcategoria = new javax.swing.JButton();
        agregarcategoria = new javax.swing.JButton();
        edaitcategoria = new javax.swing.JButton();
        buscartxtcategoria = new javax.swing.JTextField();
        guardarcategoria = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cajerotxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cantidadtxt = new javax.swing.JTextField();
        mas = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        areatxt = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaProductos2 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        buscartxtf = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        infotxtf = new javax.swing.JLabel();
        facturarboton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        resultadotxt = new javax.swing.JTextArea();
        limpiarboton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        facturatxtbusqueda = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaDetalle = new javax.swing.JTable();
        infotxtd = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel7.setText("Buscar:");

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NUM_PRODUCTO", "NUM_CATEGORIA", "EAN", "PLU", "DESCRIPCION", "PRECIO", "PESO", "CANTIDAD"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaProductos);

        ilabel53.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        ilabel53.setText("Informaci√≥n:");

        infotxtp.setText("---");

        jLabel10.setText("NUM_PRODUCTO:");

        jLabel11.setText("NUM_CATEGORIA:");

        fieldnumproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldnumproductoActionPerformed(evt);
            }
        });

        fieldnumcategoriap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldnumcategoriapMouseClicked(evt);
            }
        });
        fieldnumcategoriap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldnumcategoriapKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel12.setText("Productos");

        buscartxtproducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                buscartxtproductoFocusLost(evt);
            }
        });
        buscartxtproducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buscartxtproductoMouseExited(evt);
            }
        });
        buscartxtproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscartxtproductoActionPerformed(evt);
            }
        });
        buscartxtproducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscartxtproductoKeyReleased(evt);
            }
        });

        jLabel13.setText("DESCRIPCI√ìN:");

        fieldean.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldeanMouseClicked(evt);
            }
        });
        fieldean.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldeanKeyReleased(evt);
            }
        });

        fieldprecio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldprecioMouseClicked(evt);
            }
        });
        fieldprecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldprecioKeyReleased(evt);
            }
        });

        jLabel14.setText("EAN:");

        fieldplu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldpluMouseClicked(evt);
            }
        });
        fieldplu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldpluKeyReleased(evt);
            }
        });

        fielddescripcionp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fielddescripcionpMouseClicked(evt);
            }
        });
        fielddescripcionp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fielddescripcionpKeyReleased(evt);
            }
        });

        fieldcantidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldcantidadMouseClicked(evt);
            }
        });
        fieldcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldcantidadKeyReleased(evt);
            }
        });

        jLabel15.setText("PLU:");

        jLabel16.setText("PRECIO:");

        jLabel18.setText("CANTIDAD:");

        fieldpeso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldpesoMouseClicked(evt);
            }
        });
        fieldpeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldpesoKeyReleased(evt);
            }
        });

        jLabel19.setText("PESO:");

        agregarproducto.setText("AGREGAR");
        agregarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarproductoActionPerformed(evt);
            }
        });

        eliminarproducto.setText("ELIMINAR");
        eliminarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarproductoActionPerformed(evt);
            }
        });

        editarproducto.setText("EDITAR");
        editarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarproductoActionPerformed(evt);
            }
        });

        guardarproducto.setText("GUARDAR");
        guardarproducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarproductoActionPerformed(evt);
            }
        });

        cantipo.setText("--");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ilabel53)
                                .addGap(24, 24, 24)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(infotxtp, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cantipo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buscartxtproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel14)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(eliminarproducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(fieldprecio, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addComponent(fieldplu, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addComponent(fielddescripcionp, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addComponent(fieldean, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addComponent(fieldnumproducto, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addComponent(fieldnumcategoriap, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addComponent(fieldpeso, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addComponent(fieldcantidad))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(guardarproducto)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(agregarproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(68, 68, 68)
                            .addComponent(editarproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(buscartxtproducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldnumproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldnumcategoriap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldplu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fielddescripcionp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldpeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agregarproducto)
                            .addComponent(eliminarproducto)
                            .addComponent(editarproducto))
                        .addGap(18, 18, 18)
                        .addComponent(guardarproducto)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infotxtp)
                            .addComponent(ilabel53))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantipo)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel9)
                        .addContainerGap(37, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(792, 792, 792))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Productos", jPanel2);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setText("Buscar:");

        tablaCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NUM_CATEGORIA", "DESCRIPCION"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCategoria);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setText("Informaci√≥n:");

        infotxt.setText("---");

        jLabel4.setText("NUM_CATEGORIA:");

        jLabel5.setText("DESCRIPCION:");

        fieldnumcategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldnumcategoriaActionPerformed(evt);
            }
        });

        fielddescripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fielddescripcionMouseClicked(evt);
            }
        });
        fielddescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fielddescripcionKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel6.setText("Categor√≠as");

        eliminarcategoria.setText("ELIMINAR");
        eliminarcategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarcategoriaActionPerformed(evt);
            }
        });

        agregarcategoria.setText("AGREGAR");
        agregarcategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarcategoriaActionPerformed(evt);
            }
        });

        edaitcategoria.setText("EDITAR");
        edaitcategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edaitcategoriaActionPerformed(evt);
            }
        });

        buscartxtcategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscartxtcategoriaActionPerformed(evt);
            }
        });
        buscartxtcategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscartxtcategoriaKeyReleased(evt);
            }
        });

        guardarcategoria.setText("GUARDAR");
        guardarcategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarcategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(eliminarcategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(guardarcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(fieldnumcategoria, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fielddescripcion, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(agregarcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                                    .addComponent(edaitcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(infotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buscartxtcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel6)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(fieldnumcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(fielddescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eliminarcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edaitcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(guardarcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buscartxtcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(infotxt))
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Categorias", jPanel1);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel8.setText("Cajero");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel17.setText("Productos:");

        cajerotxt.setEditable(false);

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel20.setText("Cantidad:");

        cantidadtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadtxtActionPerformed(evt);
            }
        });
        cantidadtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantidadtxtKeyReleased(evt);
            }
        });

        mas.setText("+");
        mas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masActionPerformed(evt);
            }
        });

        areatxt.setEditable(false);
        areatxt.setColumns(20);
        areatxt.setRows(5);
        jScrollPane3.setViewportView(areatxt);

        tablaProductos2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NUM_PRODUCTO", "NUM_CATEGORIA", "EAN", "PLU", "DESCRIPCION", "PRECIO", "PESO", "CANTIDAD"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductos2MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tablaProductos2);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel21.setText("Buscar:");

        buscartxtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscartxtfActionPerformed(evt);
            }
        });
        buscartxtf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscartxtfKeyReleased(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel22.setText("Informaci√≥n:");

        infotxtf.setText("---");

        facturarboton.setText("Facturar");
        facturarboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturarbotonActionPerformed(evt);
            }
        });

        resultadotxt.setEditable(false);
        resultadotxt.setColumns(20);
        resultadotxt.setRows(5);
        jScrollPane6.setViewportView(resultadotxt);

        limpiarboton.setText("Limpiar");
        limpiarboton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarbotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel17)
                        .addGap(38, 38, 38)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(31, 31, 31)
                                .addComponent(buscartxtf, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(31, 31, 31)
                                .addComponent(cajerotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(infotxtf, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(limpiarboton)
                                .addGap(34, 34, 34)
                                .addComponent(facturarboton)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cantidadtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mas)
                        .addGap(0, 194, Short.MAX_VALUE))
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cajerotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(buscartxtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cantidadtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mas)))
                        .addGap(0, 87, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(infotxtf)
                    .addComponent(facturarboton)
                    .addComponent(limpiarboton)))
        );

        jTabbedPane1.addTab("Facturar", jPanel4);

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel23.setText("Buscar:");

        facturatxtbusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturatxtbusquedaActionPerformed(evt);
            }
        });
        facturatxtbusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                facturatxtbusquedaKeyReleased(evt);
            }
        });

        tablaDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NUM_DETALLE", "NUM_FACTURA", "FECHA_HORA", "CAJERO", "NUM_PRODUCTO", "CANTIDAD", "SUBTOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaDetalle);

        infotxtd.setText("---");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel24.setText("Informaci√≥n:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(infotxtd, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(825, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addGap(34, 34, 34)
                .addComponent(facturatxtbusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1297, Short.MAX_VALUE)
                .addGap(66, 66, 66))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facturatxtbusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(infotxtd))
                .addGap(66, 66, 66))
        );

        jTabbedPane1.addTab("Ver Facturas", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldeanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldeanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldeanMouseClicked

    private void buscartxtproductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscartxtproductoKeyReleased
        infotxtp.setText("---");
        try {
            if (buscartxtproducto.getText().equals("")) {
                this.mostrarTodosRegistrosProductos(controlador.getProducto().getAll());
            } else if (controlador.getProducto().getRegistro(Integer.parseInt(buscartxtproducto.getText())).getNum_producto()
                    == Integer.parseInt(buscartxtproducto.getText())) {
                busquedaProducto(controlador.getProducto().getRegistro(Integer.parseInt(buscartxtproducto.getText())));
            }
        } catch (NullPointerException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_buscartxtproductoKeyReleased

    private void buscartxtproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscartxtproductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscartxtproductoActionPerformed

    private void fieldnumcategoriapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldnumcategoriapMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldnumcategoriapMouseClicked

    private void fieldnumproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldnumproductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldnumproductoActionPerformed

    private void tablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseClicked
        setGrey();
        setTextFieldSize();
        infotxtp.setText("---");
        fieldnumcategoriap.setEnabled(false);
        fieldean.setEnabled(false);
        fieldplu.setEnabled(false);
        fielddescripcionp.setEnabled(false);
        fieldprecio.setEnabled(false);
        fieldpeso.setEnabled(false);
        fieldcantidad.setEnabled(false);
        DefaultTableModel modelo = (DefaultTableModel) tablaProductos.getModel();
        int num_producto = tablaProductos.getSelectedRow();
        fieldnumproducto.setText(modelo.getValueAt(num_producto, 0).toString());
        fieldnumcategoriap.setText(modelo.getValueAt(num_producto, 1).toString());
        fieldean.setText(modelo.getValueAt(num_producto, 2).toString());
        fieldplu.setText(modelo.getValueAt(num_producto, 3).toString());
        fielddescripcionp.setText(modelo.getValueAt(num_producto, 4).toString());
        fieldprecio.setText(modelo.getValueAt(num_producto, 5).toString());
        fieldpeso.setText(modelo.getValueAt(num_producto, 6).toString());
        fieldcantidad.setText(modelo.getValueAt(num_producto, 7).toString());
        guardarproducto.setEnabled(false);
        editarproducto.setEnabled(true);
        eliminarproducto.setEnabled(true);
        verificarUnidad();
    }//GEN-LAST:event_tablaProductosMouseClicked

    private void fieldprecioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldprecioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldprecioMouseClicked

    private void fieldpluMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldpluMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldpluMouseClicked

    private void fielddescripcionpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fielddescripcionpMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fielddescripcionpMouseClicked

    private void fieldcantidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldcantidadMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldcantidadMouseClicked

    private void guardarcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarcategoriaActionPerformed
        if (boton.equals("editar")) {
            fielddescripcion.setEditable(true);
            if (fielddescripcion.getText().equals("")) {
                infotxt.setText("La descripcion no puede estar vac√≠a");
            } else {
                controlador.getCategoria().modificar(Integer.valueOf(fieldnumcategoria.getText()), fielddescripcion.getText());
                infotxt.setText("Registro actualizado");
                fielddescripcion.setText("");
                fieldnumcategoria.setText("");
                this.mostrarTodosRegistros(controlador.getCategoria().getAll());
            }
        } else if (boton.equals("agregar")) {
            if (fielddescripcion.getText().equals("")) {
                infotxt.setText("La descripcion no puede estar vac√≠a");
            } else {
                CategoriaModel cm = new CategoriaModel(Integer.valueOf(fieldnumcategoria.getText()), fielddescripcion.getText());
                controlador.getCategoria().insertar(cm);
                infotxt.setText("Registro agregado");
                this.mostrarTodosRegistros(controlador.getCategoria().getAll());
                fielddescripcion.setText("");
                fieldnumcategoria.setText(String.valueOf(limite));
                fielddescripcion.setEditable(false);
                fielddescripcion.setEnabled(false);
                guardarcategoria.setEnabled(false);
            }
        }
        fielddescripcion.setBorder(grey);
    }//GEN-LAST:event_guardarcategoriaActionPerformed

    private void buscartxtcategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscartxtcategoriaKeyReleased
        infotxt.setText("---");
        try {
            if (buscartxtcategoria.getText().equals("")) {
                this.mostrarTodosRegistros(controlador.getCategoria().getAll());
            } else {
                busquedaCategoria(controlador.getCategoria().getRegistro(Integer.parseInt(buscartxtcategoria.getText())));
            }
        } catch (NullPointerException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_buscartxtcategoriaKeyReleased

    private void buscartxtcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscartxtcategoriaActionPerformed

    }//GEN-LAST:event_buscartxtcategoriaActionPerformed

    private void edaitcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edaitcategoriaActionPerformed
        boton = "editar";
        fielddescripcion.setEditable(true);
        fielddescripcion.setEnabled(true);
        guardarcategoria.setEnabled(true);
        eliminarcategoria.setEnabled(false);
        agregarcategoria.setEnabled(false);
    }//GEN-LAST:event_edaitcategoriaActionPerformed

    private void agregarcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarcategoriaActionPerformed
        boton = "agregar";
        fieldnumcategoria.setText(String.valueOf(limite + 1));
        fielddescripcion.setEditable(true);
        fielddescripcion.setEnabled(true);
        guardarcategoria.setEnabled(true);
        eliminarcategoria.setEnabled(false);
        this.edaitcategoria.setEnabled(false);
        fielddescripcion.setText("");
    }//GEN-LAST:event_agregarcategoriaActionPerformed
    private void agregarproductoActionPerformed(java.awt.event.ActionEvent evt) {
        botonP = "agregar";
        fieldnumproducto.setText(String.valueOf(limiteProducto));
        fieldnumproducto.setEnabled(false);
        fieldnumcategoriap.setEnabled(true);
        fieldean.setEnabled(true);
        fieldplu.setEnabled(true);
        fielddescripcionp.setEnabled(true);
        fieldprecio.setEnabled(true);
        fieldpeso.setEnabled(true);
        fieldcantidad.setEnabled(true);

        fieldnumcategoriap.setText("");
        fieldean.setText("");
        fieldplu.setText("");
        fielddescripcionp.setText("");
        fieldprecio.setText("");
        fieldpeso.setText("");
        fieldcantidad.setText("");
        guardarproducto.setEnabled(true);
        this.editarproducto.setEnabled(false);
    }
    private void eliminarcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarcategoriaActionPerformed
        if (fieldnumcategoria.getText().equals("")) {
            infotxt.setText("Seleccione un registro que desea eliminar");
        } else {
            controlador.getCategoria().eliminar(Integer.valueOf(fieldnumcategoria.getText()));
            System.out.println(fieldnumcategoria.getText());
            infotxt.setText("Registro eliminado");
            this.mostrarTodosRegistros(controlador.getCategoria().getAll());
            fielddescripcion.setText("");
            fieldnumcategoria.setText("");
            estadofield = 0;
        }
    }//GEN-LAST:event_eliminarcategoriaActionPerformed
    private void fielddescripcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fielddescripcionMouseClicked

    }//GEN-LAST:event_fielddescripcionMouseClicked
    private void fieldnumcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldnumcategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldnumcategoriaActionPerformed
    private void tablaCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCategoriaMouseClicked
        infotxt.setText("---");
        fielddescripcion.setBorder(grey);
        DefaultTableModel modelo = (DefaultTableModel) tablaCategoria.getModel();
        int num_categoria = tablaCategoria.getSelectedRow();
        fielddescripcion.setEnabled(false);
        guardarcategoria.setEnabled(false);
        agregarcategoria.setEnabled(true);
        fieldnumcategoria.setEditable(false);
        fielddescripcion.setEditable(false);
        fielddescripcion.setEnabled(false);
        edaitcategoria.setEnabled(true);
        eliminarcategoria.setEnabled(true);
        fieldnumcategoria.setText(modelo.getValueAt(num_categoria, 0).toString());
        fielddescripcion.setText(modelo.getValueAt(num_categoria, 1).toString());
    }//GEN-LAST:event_tablaCategoriaMouseClicked
    private void fieldpesoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldpesoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldpesoMouseClicked
//GEN-FIRST:event_agregarproductoActionPerformed
//GEN-LAST:event_agregarproductoActionPerformed
    private void guardarproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarproductoActionPerformed
        try {
            if (botonP.equals("editar")) {
                fieldnumcategoriap.setEnabled(true);
                fieldean.setEnabled(true);
                fieldplu.setEnabled(true);
                fielddescripcionp.setEnabled(true);
                fieldprecio.setEnabled(true);
                fieldpeso.setEnabled(true);
                fieldcantidad.setEnabled(true);
                setGrey();
                eliminarproducto.setEnabled(false);
                guardarproducto.setEnabled(true);
                if (fieldnumcategoriap.getText().equals("") || fieldcantidad.getText().equals("")
                        || fieldean.getText().equals("") || fieldplu.getText().equals("") || fielddescripcionp.getText().equals("")
                        || fieldprecio.getText().equals("") || fieldpeso.getText().equals("")) {
                    infotxtp.setText("No pueden haber campos vac√≠os");
                } else {
                    controlador.getProducto().modificar(Integer.valueOf(fieldnumproducto.getText()), Integer.valueOf(fieldnumcategoriap.getText()),
                            Integer.valueOf(fieldean.getText()), Integer.valueOf(fieldplu.getText()),
                            Float.parseFloat(fieldpeso.getText()), fielddescripcionp.getText(),
                            Float.parseFloat(fieldprecio.getText()),
                            Integer.valueOf(fieldcantidad.getText()));
                    infotxtp.setText("Registro actualizado");
                    fieldnumproducto.setText("");
                    fieldnumcategoriap.setText("");
                    fieldean.setText("");
                    fieldplu.setText("");
                    fielddescripcionp.setText("");
                    fieldprecio.setText("");
                    fieldpeso.setText("");
                    fieldcantidad.setText("");
                    editarproducto.setEnabled(false);
                    agregarproducto.setEnabled(true);
                    guardarproducto.setEnabled(false);
                    this.mostrarTodosRegistrosProductos(controlador.getProducto().getAll());
                }
            } else if (botonP.equals("agregar")) {
                if (fieldnumcategoriap.getText().equals("")) {
                    infotxtp.setText("No pueden haber campos vac√≠os");
                } else {
                    ProductoModel pm = new ProductoModel(limiteProducto, Integer.valueOf(fieldnumcategoriap.getText()),
                            Integer.valueOf(fieldean.getText()), Integer.valueOf(fieldplu.getText()),
                            Float.parseFloat(fieldpeso.getText()), fielddescripcionp.getText(),
                            Float.parseFloat(fieldprecio.getText()),
                            Integer.valueOf(fieldcantidad.getText()));
                    controlador.getProducto().insertar(pm);
                    infotxtp.setText("Registro agregado");
                    this.mostrarTodosRegistrosProductos(controlador.getProducto().getAll());
                    fieldnumproducto.setText(String.valueOf(limiteProducto));
                    fieldnumcategoriap.setText("");
                    fieldean.setText("");
                    fieldplu.setText("");
                    fielddescripcionp.setText("");
                    fieldprecio.setText("");
                    fieldpeso.setText("");
                    fieldcantidad.setText("");
                    fieldnumproducto.setText(String.valueOf(limiteProducto));
                    fielddescripcion.setEditable(false);
                    fieldnumcategoriap.setEnabled(false);
                    fieldean.setEnabled(false);
                    fieldplu.setEnabled(false);
                    fielddescripcionp.setEnabled(false);
                    fieldprecio.setEnabled(false);
                    fieldpeso.setEnabled(false);
                    fieldcantidad.setEnabled(false);
                    fielddescripcion.setEnabled(false);
                    fielddescripcion.setEnabled(false);
                    guardarproducto.setEnabled(false);
                }
            }
        } catch (NullPointerException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_guardarproductoActionPerformed

    public void setGrey() {
        fieldnumcategoriap.setBorder(grey);
        fieldean.setBorder(grey);
        fieldplu.setBorder(grey);
        fielddescripcionp.setBorder(grey);
        fieldprecio.setBorder(grey);
        fieldpeso.setBorder(grey);
        fieldcantidad.setBorder(grey);
    }
    private void editarproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarproductoActionPerformed
        botonP = "editar";
        fieldnumcategoriap.setEnabled(true);
        fieldean.setEnabled(true);
        fieldplu.setEnabled(true);
        fielddescripcionp.setEnabled(true);
        fieldprecio.setEnabled(true);
        fieldpeso.setEnabled(true);
        fieldcantidad.setEnabled(true);
        agregarproducto.setEnabled(false);
        guardarproducto.setEnabled(true);
        eliminarproducto.setEnabled(false);
    }//GEN-LAST:event_editarproductoActionPerformed

    private void eliminarproductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarproductoActionPerformed
        if (fieldnumproducto.getText().equals("")) {
            infotxtp.setText("Seleccione un registro que desea eliminar");
        } else {
            controlador.getProducto().eliminar(Integer.valueOf(fieldnumproducto.getText()));
            infotxtp.setText("Registro eliminado");
            this.mostrarTodosRegistrosProductos(controlador.getProducto().getAll());
            fieldnumproducto.setText("");
            fieldnumcategoriap.setText("");
            fieldean.setText("");
            fieldplu.setText("");
            fielddescripcionp.setText("");
            fieldprecio.setText("");
            fieldpeso.setText("");
            fieldcantidad.setText("");
        }
    }//GEN-LAST:event_eliminarproductoActionPerformed

    private void cantidadtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadtxtActionPerformed

    private void masActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masActionPerformed
        try {
            existe = 0;

            resultadotxt.setText("");
            DetalleTemporal dt;
            System.out.println("size array 1: " + array.size());
            for (int i = 0; i < array.size(); i++) {
                System.out.println("values array begin: " + array.get(i));
            }
            String fecha = "auto";
            String cajero = String.valueOf(getCajero());
            DefaultTableModel modelo = (DefaultTableModel) tablaProductos2.getModel();
            int num_producto = tablaProductos2.getSelectedRow();
            String producto = modelo.getValueAt(num_producto, 4).toString();
            if (Integer.valueOf(cantidadtxt.getText()) > 0) {
                if (array.size() > 0) {
                    int y = 0;
                    int i = 0;
                    while (y < array.size()) {
                        if (array.get(i).equals(producto)) {
                            y = array.size() + 1;
                            existe = 1;
                        } else {
                            existe = 0;
                            y++;
                            i++;
                        }
                    }
                }
                if (existe > 0) {
                    infotxtf.setText("El producto ya fue ingresado");
                } else {
                    int cantidad = Integer.valueOf(modelo.getValueAt(num_producto, 7).toString());
                    if (Integer.valueOf(cantidadtxt.getText()) > cantidad || Integer.valueOf(cantidadtxt.getText()) == 0) {
                        infotxtf.setText("Cantidad ingresada es mayor a la existenteo o es menor o igual a 0");
                    } else {
                        array.add(producto);
                        infotxtf.setText("Producto agregado a la factura");
                        float x = Float.valueOf(cantidadtxt.getText()) * Float.valueOf(modelo.getValueAt(num_producto, 5).toString());
                        lineaFactura = lineaFactura + "\n" + "Producto: " + producto + " | " + "Precio: " + x + " colones" + " | " + "Cantidad: " + cantidadtxt.getText();
                        areatxt.setText(lineaFactura);

                        dt = new DetalleTemporal(limiteF, fecha, cajero, cantidad, num_detalle_clicked, Float.valueOf(cantidadtxt.getText()), x);
                        f.add(dt);
                        cantidadtxt.setText("");
                        for (int i = 0; i < array.size(); i++) {
                            System.out.println("values array end: " + array.get(i));
                        }
                    }
                }
            }
        } catch (NumberFormatException e) {
            infotxtf.setText("Debe ingresar una cantidad " + e.getMessage());
        }
    }//GEN-LAST:event_masActionPerformed

    private void tablaProductos2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductos2MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tablaProductos2.getModel();
        int num = tablaProductos2.getSelectedRow();
        num_detalle_clicked = Integer.valueOf(modelo.getValueAt(num, 0).toString());
        System.out.println("pclicked: " + num_detalle_clicked);
    }//GEN-LAST:event_tablaProductos2MouseClicked

    private void buscartxtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscartxtfActionPerformed
    }//GEN-LAST:event_buscartxtfActionPerformed

    private void buscartxtfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscartxtfKeyReleased
        try {
            if (buscartxtf.getText().equals("")) {
                this.mostrarTodosRegistrosProductos(controlador.getProducto().getAll());
            } else {
                busquedaProducto(controlador.getProducto().getRegistro(Integer.parseInt(buscartxtf.getText())));
            }
        } catch (NullPointerException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_buscartxtfKeyReleased

    private void facturatxtbusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_facturatxtbusquedaKeyReleased
        infotxtd.setText("---");
        try {
            if (facturatxtbusqueda.getText().equals("")) {
                this.mostrarTodosRegistrosFacturas(controlador.getDetalle_factura().getAll());
            } else {
                busquedaDetalle(controlador.getDetalle_factura().getRegistro(Integer.parseInt(facturatxtbusqueda.getText())));
            }
        } catch (NullPointerException | NumberFormatException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_facturatxtbusquedaKeyReleased

    private void facturatxtbusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturatxtbusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facturatxtbusquedaActionPerformed

    private void facturarbotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturarbotonActionPerformed
        FacturaModel fm = null;
        if (f.size() > 0) {
            int x = controlador.getFactura().getAll().size() + 1;
            float total = 0;
            for (int i = 0; i < f.size(); i++) {
                total += f.get(i).getSubtotal();
            }
            fm = new FacturaModel(x, total);
            controlador.getFactura().insertar(fm);
            for (int i = 0; i < f.size(); i++) {
                DetalleFacturaModel dfm = new DetalleFacturaModel(Integer.valueOf(f.get(i).getNum_detalle_factura() + i), x,
                        f.get(i).getFecha_hora(), String.valueOf(f.get(i).getCajero()), f.get(i).getNum_producto(),
                        f.get(i).getCantidad(), f.get(i).getSubtotal());
                try {
                    controlador.getDetalle_factura().insertar(dfm);
                    controlador.getProducto().modificarCantidad(f.get(i).getNum_producto(), Float.valueOf(f.get(i).getCantidadactual() - f.get(i).getCantidad()));

                    this.mostrarTodosRegistrosFacturas(controlador.getDetalle_factura().getAll());
                    this.mostrarTodosRegistrosProductos(controlador.getProducto().getAll());
                    array.clear();
                } catch (ParseException ex) {
                    Logger.getLogger(ComponentView.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
            areatxt.setText("");
            resultadotxt.setText("N√∫mero de factura: " + x + "\n" + lineaFactura + "\n" + "Total: " + total + " colones");
            lineaFactura = "";
            f.clear();
            infotxtf.setText("---");
            array.clear();
        } else {
            infotxtf.setText("Debe ingresar productos para poder facturar");
        }
    }//GEN-LAST:event_facturarbotonActionPerformed

    private void limpiarbotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarbotonActionPerformed
        resultadotxt.setText("");
        areatxt.setText("");
        cantidadtxt.setText("");
        f.clear();
        lineaFactura = "";
        infotxtf.setText("---");
        array.clear();
    }//GEN-LAST:event_limpiarbotonActionPerformed

    private void buscartxtproductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscartxtproductoFocusLost
        System.out.println("focus lost");
    }//GEN-LAST:event_buscartxtproductoFocusLost

    private void buscartxtproductoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscartxtproductoMouseExited
        System.out.println("click lost");
    }//GEN-LAST:event_buscartxtproductoMouseExited

    private void fieldnumcategoriapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldnumcategoriapKeyReleased
        verificarUnidad();
        if (evaluarInputNumber(fieldnumcategoriap.getText())) {
            fieldnumcategoriap.setBorder(green);
        } else {
            fieldnumcategoriap.setBorder(red);
        }
        this.setTextFieldSize();
    }//GEN-LAST:event_fieldnumcategoriapKeyReleased

    private void fieldeanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldeanKeyReleased
        if (evaluarInputNumber(fieldean.getText())) {
            fieldean.setBorder(green);
        } else {
            fieldean.setBorder(red);
        }
    }//GEN-LAST:event_fieldeanKeyReleased

    private void fieldpluKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldpluKeyReleased
        if (evaluarInputNumber(fieldplu.getText())) {
            fieldplu.setBorder(green);
        } else {
            fieldplu.setBorder(red);
        }
    }//GEN-LAST:event_fieldpluKeyReleased

    private void fielddescripcionpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fielddescripcionpKeyReleased
        if (evaluarInputText(fielddescripcionp.getText())) {
            fielddescripcionp.setBorder(green);
        } else {
            fielddescripcionp.setBorder(red);
        }
    }//GEN-LAST:event_fielddescripcionpKeyReleased

    private void fieldprecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldprecioKeyReleased
        if (evaluarInputNumber(fieldprecio.getText())) {
            fieldprecio.setBorder(green);
        } else {
            fieldprecio.setBorder(red);
        }
    }//GEN-LAST:event_fieldprecioKeyReleased

    private void fieldpesoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldpesoKeyReleased
        if (evaluarInputNumber(fieldpeso.getText())) {
            fieldpeso.setBorder(green);
        } else {
            fieldpeso.setBorder(red);
        }
    }//GEN-LAST:event_fieldpesoKeyReleased

    private void fieldcantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldcantidadKeyReleased
        if (evaluarInputNumber(fieldcantidad.getText())) {
            fieldcantidad.setBorder(green);
        } else {
            fieldcantidad.setBorder(red);
        }
    }//GEN-LAST:event_fieldcantidadKeyReleased

    private void fielddescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fielddescripcionKeyReleased
        if (evaluarInputText(fielddescripcion.getText())) {
            fielddescripcion.setBorder(green);
        } else {
            fielddescripcion.setBorder(red);
        }
    }//GEN-LAST:event_fielddescripcionKeyReleased

    private void cantidadtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadtxtKeyReleased
        if (evaluarInputNumber(cantidadtxt.getText())) {
            cantidadtxt.setBorder(green);
        } else {
            cantidadtxt.setBorder(red);
        }
    }//GEN-LAST:event_cantidadtxtKeyReleased

    public void verificarUnidad() {
        if (fieldnumcategoriap.getText().equals("1")) {
            cantipo.setText("litros");
        } else if (fieldnumcategoriap.getText().equals("2")) {
            cantipo.setText("gramos");
        } else if (fieldnumcategoriap.getText().equals("3")) {
            cantipo.setText("gramos");
        } else if (fieldnumcategoriap.getText().equals("5")) {
            cantipo.setText("miligramos");
        }
    }

    public void busquedaDetalle(List<DetalleFacturaModel> list) {
        String[] titulos = {"NUM_DETALLE", "NUM_FACTURA", "FECHA", "CAJERO", "NUM_PRODUCTO", "CANTIDAD", "SUBTOTAL"};
        String[] registros = new String[7];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        try {
            for (int i = 0; i < list.size(); i++) {
                registros[0] = String.valueOf(list.get(i).getNum_detalle_factura());
                registros[1] = String.valueOf(list.get(i).getNum_factura());
                registros[2] = String.valueOf(list.get(i).getFecha_hora());
                registros[3] = String.valueOf(list.get(i).getCajero());
                registros[4] = String.valueOf(list.get(i).getNum_producto());
                registros[5] = String.valueOf(list.get(i).getCantidad());
                registros[6] = String.valueOf(list.get(i).getSubtotal());
                modelo.addRow(registros);
                tablaDetalle.setModel(modelo);
                infotxtd.setText("");
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "No se carg√≥ tabla: " + e.getMessage());
            infotxtd.setText("Registro no encontrado");
        }
    }

    public final void mostrarTodosRegistros(List<CategoriaModel> list) {
        String[] titulos = {"NUM_CATEGORIA", "DESCRIPCI√ìN"};
        String[] registros = new String[2];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        try {
            for (int i = 0; i < list.size(); i++) {
                String aux = String.valueOf(list.get(i).getNum_cateogoria());
                registros[0] = aux;
                registros[1] = list.get(i).getDescripcion();
                modelo.addRow(registros);
            }
            fieldnumcategoria.setEnabled(false);
            fielddescripcion.setEnabled(false);
            agregarcategoria.setEnabled(true);
            this.edaitcategoria.setEnabled(false);
            eliminarcategoria.setEnabled(false);
            guardarcategoria.setEnabled(false);
            tablaCategoria.setModel(modelo);
            infotxt.setText("---");
            tablaCategoria.setDefaultEditor(Object.class,
                    null);
            limite = list.size() + 1;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se carg√≥ tabla: " + e.getMessage());
        }
    }

    public final void mostrarTodosRegistrosProductos(List<ProductoModel> list) {
        String[] titulos = {"NUM_PRODUCTO", "NUM_CATEGORIA", "EAN", "PLU", "DESCRIPCION", "PRECIO", "PESO", "CANTIDAD"};
        String[] registros = new String[8];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        try {
            for (int i = 0; i < list.size(); i++) {
                registros[0] = String.valueOf(list.get(i).getNum_producto());
                registros[1] = String.valueOf(list.get(i).getNum_categoria());
                registros[2] = String.valueOf(list.get(i).getEan());
                registros[3] = String.valueOf(list.get(i).getPlu());
                registros[4] = String.valueOf(list.get(i).getDescripcion());
                registros[5] = String.valueOf(list.get(i).getPrecio());
                registros[6] = String.valueOf(list.get(i).getPeso());
                registros[7] = String.valueOf(list.get(i).getCantidad());
                modelo.addRow(registros);
            }
            infotxtp.setText("---");
            infotxtf.setText("---");
            tablaProductos.setDefaultEditor(Object.class,
                    null);
            tablaProductos2.setDefaultEditor(Object.class,
                    null);
            fieldnumproducto.setEnabled(false);
            fieldnumcategoriap.setEnabled(false);
            fieldean.setEnabled(false);
            fieldplu.setEnabled(false);
            fielddescripcionp.setEnabled(false);
            fieldprecio.setEnabled(false);
            fieldpeso.setEnabled(false);
            fieldcantidad.setEnabled(false);
            agregarproducto.setEnabled(true);
            editarproducto.setEnabled(false);
            eliminarproducto.setEnabled(false);
            guardarproducto.setEnabled(false);
            tablaProductos.setModel(modelo);
            tablaProductos2.setModel(modelo);
            limiteProducto = list.size() + 1;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se carg√≥ tabla: " + e.getMessage());
        }
    }

    public final void mostrarTodosRegistrosFacturas(List<DetalleFacturaModel> list) {
        String[] titulos = {"NUM_DETALLE", "NUM_FACTURA", "FECHA", "CAJERO", "NUM_PRODUCTO", "CANTIDAD", "SUBTOTAL"};
        String[] registros = new String[7];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        try {
            for (int i = 0; i < list.size(); i++) {
                registros[0] = String.valueOf(list.get(i).getNum_detalle_factura());
                registros[1] = String.valueOf(list.get(i).getNum_factura());
                registros[2] = String.valueOf(list.get(i).getFecha_hora());
                registros[3] = String.valueOf(list.get(i).getCajero());
                registros[4] = String.valueOf(list.get(i).getNum_producto());
                registros[5] = String.valueOf(list.get(i).getCantidad());
                registros[6] = String.valueOf(list.get(i).getSubtotal());
                modelo.addRow(registros);
                tablaDetalle.setModel(modelo);
                tablaDetalle.setDefaultEditor(Object.class,
                        null);
                limiteF = list.size() + 1;
                infotxtd.setText("---");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se carg√≥ tabla: " + e.getMessage());
        }
    }

    public void busquedaCategoria(CategoriaModel cm) {
        String[] titulos = {"NUM_CATEGORIA", "DESCRIPCI√ìN"};
        String[] registros = new String[2];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        try {
            String aux = String.valueOf(cm.getNum_cateogoria());
            registros[0] = aux;
            registros[1] = cm.getDescripcion();
            modelo.addRow(registros);
            tablaCategoria.setModel(modelo);
        } catch (Exception e) {
            infotxt.setText("Registro no encontrado");
        }
    }

    public void busquedaProducto(ProductoModel pm) {
        String[] titulos = {"NUM_PRODUCTO", "NUM_CATEGORIA", "EAN", "PLU", "DESCRIPCION", "PRECIO", "PESO", "CANTIDAD"};
        String[] registros = new String[8];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        try {
            if (pm == null) {
                infotxtp.setText("Registro no encontrado");
                infotxtf.setText("Registro no encontrado");
            } else {
                registros[0] = String.valueOf(pm.getNum_producto());
                registros[1] = String.valueOf(pm.getNum_categoria());
                registros[2] = String.valueOf(pm.getEan());
                registros[3] = String.valueOf(pm.getPlu());
                registros[4] = String.valueOf(pm.getDescripcion());
                registros[5] = String.valueOf(pm.getPrecio());
                registros[6] = String.valueOf(pm.getPeso());
                registros[7] = String.valueOf(pm.getCantidad());
                modelo.addRow(registros);
                tablaProductos.setModel(modelo);
                tablaProductos2.setModel(modelo);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public boolean evaluarInputNumber(String value) {
        return Pattern.matches(justNumber, value);
    }

    public boolean evaluarInputText(String value) {
        return Pattern.matches(justWord, value);
    }

    public void setTextFieldSize() {
        fieldnumcategoriap.setSize(fieldnumproducto.getWidth(), fieldnumproducto.getHeight());
        fieldean.setSize(fieldnumproducto.getWidth(), fieldnumproducto.getHeight());
        fieldplu.setSize(fieldnumproducto.getWidth(), fieldnumproducto.getHeight());
        fielddescripcionp.setSize(fieldnumproducto.getWidth(), fieldnumproducto.getHeight());
        fieldprecio.setSize(fieldnumproducto.getWidth(), fieldnumproducto.getHeight());
        fieldpeso.setSize(fieldnumproducto.getWidth(), fieldnumproducto.getHeight());
        fieldcantidad.setSize(fieldnumproducto.getWidth(), fieldnumproducto.getHeight());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComponentView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComponentView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComponentView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComponentView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComponentView().setVisible(true);
            }
        });
    }

    ControladorGeneral controlador;
    int limite;
    int heigth;
    int width;
    int limiteProducto;
    int estadofield = 0;
    int numfactura = 1;
    int limiteF;
    int num_detalle_clicked;
    int existe = 0;
    int cajero;
    String userType;
    String lineaFactura = "";
    String boton = "";
    String generarFactura = "";
    String botonP = "";
    List<String> array;
    List<DetalleTemporal> f;
    javax.swing.border.Border grey = BorderFactory.createLineBorder(Color.GRAY, 1);
    javax.swing.border.Border green = BorderFactory.createLineBorder(Color.GREEN, 1);
    javax.swing.border.Border red = BorderFactory.createLineBorder(Color.RED, 1);
    String justNumber = "[0-9]+";
    String justWord = "[a-zA-Z ]{2,254}";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarcategoria;
    private javax.swing.JButton agregarproducto;
    private javax.swing.JTextArea areatxt;
    private javax.swing.JTextField buscartxtcategoria;
    private javax.swing.JTextField buscartxtf;
    private javax.swing.JTextField buscartxtproducto;
    private javax.swing.JTextField cajerotxt;
    private javax.swing.JTextField cantidadtxt;
    private javax.swing.JLabel cantipo;
    private javax.swing.JButton edaitcategoria;
    private javax.swing.JButton editarproducto;
    private javax.swing.JButton eliminarcategoria;
    private javax.swing.JButton eliminarproducto;
    private javax.swing.JButton facturarboton;
    private javax.swing.JTextField facturatxtbusqueda;
    private javax.swing.JTextField fieldcantidad;
    private javax.swing.JTextField fielddescripcion;
    private javax.swing.JTextField fielddescripcionp;
    private javax.swing.JTextField fieldean;
    private javax.swing.JTextField fieldnumcategoria;
    private javax.swing.JTextField fieldnumcategoriap;
    private javax.swing.JTextField fieldnumproducto;
    private javax.swing.JTextField fieldpeso;
    private javax.swing.JTextField fieldplu;
    private javax.swing.JTextField fieldprecio;
    private javax.swing.JButton guardarcategoria;
    private javax.swing.JButton guardarproducto;
    private javax.swing.JLabel ilabel53;
    private javax.swing.JLabel infotxt;
    private javax.swing.JLabel infotxtd;
    private javax.swing.JLabel infotxtf;
    private javax.swing.JLabel infotxtp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton limpiarboton;
    private javax.swing.JButton mas;
    private javax.swing.JTextArea resultadotxt;
    private javax.swing.JTable tablaCategoria;
    private javax.swing.JTable tablaDetalle;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTable tablaProductos2;
    // End of variables declaration//GEN-END:variables
}
